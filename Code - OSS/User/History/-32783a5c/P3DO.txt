cmake_minimum_required(VERSION 3.13.4)

project(OLAS05 VERSION 1.0)


# adder use logic
option(USE_ADDER "A simple library for adding 2 floats." ON)

if(USE_ADDER)
    add_subdirectory(Adder)

    list(APPEND EXTRA_LIBS_DIRS "Adder")
    list(APPEND EXTRA_INCLUDES_DIRS "Adder")
    list(APPEND EXTRA_LINKS adder)

endif()

configure_file(OLASConfig.h.in OLASConfig.h)

add_executable(${PROJECT_NAME} main.cpp)

target_include_directories(${PROJECT_NAME} PUBLIC ${PROJECT_BINARY_DIR})

# DOWNLOAD ALL THE SUBMODULES
find_package(Git QUIET)
if(GIT_FOUND AND EXISTS "${PROJECT_SOURCE_DIR}/.git")
# Update submodules as needed
    option(GIT_SUBMODULE "Checkt submodules during build" ON)
    if(GIT_SUBMODULE)
        message(STATUS "Submodule udapte")
        execute_process(COMMAND ${GIT_EXECUTABLE} submodule udpate --init --recursive
                        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
                        RESULT_VARIABLE GIT_SUBMOD_RESULT)
        if(NOT GIT_SUBMOD_RESULT EQUAL "0")
            message(FATAL_ERROR "git submodule udpate --init failed with ${GIT_SUBMODULE_RESULT}, please checkout")
        endif()
    endif()
endif()

#............CHECK ALL THE SUBMODULES
if(NOT EXISTS "${PROJECT_SOURCE_DIR}/external/glfw/CMakeLists.txt")
    message(FATAL_ERROR "The glfw submdoules was not downloaded! GIT_SUBMODULE was turned off or failed. Please checkout.")
endif()


# add_subdirectory(Adder)

add_subdirectory(external/glfw)

target_include_directories(${PROJECT_NAME} 
    # PUBLIC Adder 
    PUBLIC external/glfw/include
    ${EXTRA_INCLUDES_DIRS}
)

target_link_directories(${PROJECT_NAME} 
    # PRIVATE Adder
    PRIVATE external/glfw/src
    ${EXTRA_LIBS_DIRS}
)

target_link_libraries(${PROJECT_NAME} ${EXTRA_LINKS} glfw)