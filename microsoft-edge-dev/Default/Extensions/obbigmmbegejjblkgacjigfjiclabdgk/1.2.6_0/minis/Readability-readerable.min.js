/* eslint-env es6:false */
/*
 * Copyright (c) 2010 Arc90 Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This code is heavily based on Arc90's readability.js (1.7.1) script
 * available at: http://code.google.com/p/arc90labs-readability
 */
var REGEXPS = { unlikelyCandidates: /-ad-|ai2html|banner|breadcrumbs|combx|comment|community|cover-wrap|disqus|extra|footer|gdpr|header|legends|menu|related|remark|replies|rss|shoutbox|sidebar|skyscraper|social|sponsor|supplemental|ad-break|agegate|pagination|pager|popup|yom-remote/i, okMaybeItsACandidate: /and|article|body|column|content|main|shadow/i }; function isNodeVisible(e) { return (!e.style || "none" != e.style.display) && !e.hasAttribute("hidden") && (!e.hasAttribute("aria-hidden") || "true" != e.getAttribute("aria-hidden") || e.className && e.className.indexOf && -1 !== e.className.indexOf("fallback-image")) } function isProbablyReaderable(e, t = {}) { "function" == typeof t && (t = { visibilityChecker: t }); var a = { minScore: 20, minContentLength: 140, visibilityChecker: isNodeVisible }; t = Object.assign(a, t); var r = e.querySelectorAll("p, pre"), i = e.querySelectorAll("div > br"); if (i.length) { var n = new Set(r);[].forEach.call(i, function (e) { n.add(e.parentNode) }), r = Array.from(n) } var s = 0; return [].some.call(r, function (e) { if (!t.visibilityChecker(e)) return !1; var a = e.className + " " + e.id; if (REGEXPS.unlikelyCandidates.test(a) && !REGEXPS.okMaybeItsACandidate.test(a)) return !1; if (e.matches("li p")) return !1; var r = e.textContent.trim().length; return !(r < t.minContentLength) && (s += Math.sqrt(r - t.minContentLength)) > t.minScore }) } "object" == typeof module && (module.exports = isProbablyReaderable);